configfile: "/home/masih/BacterialSimulator/Pipeline/ConfigFile.yaml"

rule PairedReadAligner:
    input:
        fastq1=expand("{outputDIR}/{simulations}/{{simulation_index}}/Assembly/{{name}}1.fq",outputDIR=config["outputDIR"],simulations=config["simulations"]),
        fastq2=expand("{outputDIR}/{simulations}/{{simulation_index}}/Assembly/{{name}}2.fq",outputDIR=config["outputDIR"],simulations=config["simulations"]),
        ref= expand("{outputDIR}/{SequenceDIR}/{fasta_output}",outputDIR=config["outputDIR"],SequenceDIR=config["SequenceDIR"],fasta_output=str(config["fasta_file"]).split('/')[-1]),
    output:
        sam=expand("{outputDIR}/{simulations}/{{simulation_index}}/Assembly/{{name}}.sam",outputDIR=config["outputDIR"],simulations=config["simulations"]),
        samErr=expand("{outputDIR}/{simulations}/{{simulation_index}}/Assembly/{{name}}.samErr",outputDIR=config["outputDIR"],simulations=config["simulations"]),
    params:
        bwa=config['bwa'],
        platform=config['platform'],
        logNAME="BWA pairedRead Aligner." + strftime("%Y-%m-%d.%H-%M-%S", localtime()),
    threads: 4
    run:
        from subprocess import call
        callString='%s mem -aM -R "@RG\\tID:%s\\tPL:%s\\tLB:%s\\tSM:%s" -t %s %s %s %s -v 2 > %s 2> %s' %(params.bwa,str(wildcards.name)+str(params.platform),str(params.platform),str(wildcards.name),str(wildcards.name),str(threads),str(input.ref),str(input.fastq1),str(input.fastq2),str(output.sam),str(output.samErr))
        call('echo "' + str(params.logNAME) + ':\n ' + callString + '\n" >> ' + config["ShellCallFile"], shell=True)
        call(callString, shell=True) 
        import sys
        import fileinput
        for line in fileinput.input(str(output.sam), inplace=1):
            if line[0:3]== "@PG":
                continue# write a blank line after the 5th line
            sys.stdout.write(line)  
           

#ID: Unique sample ID, platform+lane can be a good example
#PL: platform
#LB: library
#SM: sample
#-a	Output all found alignments for single-end or unpaired paired-end reads. These alignments will be flagged as secondary alignments.
#-M	Mark shorter split hits as secondary (for Picard compatibility).