# -*- coding: utf-8 -*-
"""
Created on Wed May 16 14:04:22 2018

@author: morte
"""
import random 




def indexerPhen(wildcards):
    return(int(wildcards.phenotype_index))



rule PhenoPermutor:
    input:
        PlinkFormatCausalBed=expand("{outputDIR}/{simulations}/{{simulation_index}}/PhenotypeSim/PlinkFormatCausalVar.bed",outputDIR=config["outputDIR"],simulations=config["simulations"]),
        PlinkFormatCausalFam=expand("{outputDIR}/{simulations}/{{simulation_index}}/PhenotypeSim/PlinkFormatCausalVar.fam",outputDIR=config["outputDIR"],simulations=config["simulations"]),
        PlinkFormatCausalBim=expand("{outputDIR}/{simulations}/{{simulation_index}}/PhenotypeSim/PlinkFormatCausalVar.bim",outputDIR=config["outputDIR"],simulations=config["simulations"]),
    output:
        CausalLoci=expand("{outputDIR}/{simulations}/{{simulation_index}}/PhenotypeSim/{{phenotype_index}}/CausalLoci.snplist",outputDIR=config["outputDIR"],simulations=config["simulations"]),
    params:
        value= indexerPhen,
        effect_size_ODR=[int(item) for item in config['effect_size_ODR'].split(',')],
        ShellCallFile=config['ShellCallFile'],
    threads: 4
    run:
        iterationsPhen=params.value
        snpList=[]
        with open(input.PlinkFormatCausalBim[0],'r') as file:
            line=file.readline()
            while line:
                if "*" not in line.split()[1]:
                    snpList.append(line.split()[1])
                line=file.readline()
        variantNums= iterationsPhen
        causalNow=random.sample(snpList,variantNums)
        effectSizeNow=params.effect_size_ODR*int((variantNums/len(params.effect_size_ODR)))
        causalVar=[item for item in zip(causalNow,effectSizeNow)]
        txt=open(output.CausalLoci[0],'w')
        from math import log
        for variants in causalVar:
            txt.write('%s\t%s\n'%(variants[0],log(variants[1])))
        txt.close()
        
        
        
        
        
      