# -*- coding: utf-8 -*-
"""
Created on Thu Aug  2 13:05:58 2018

@author: Masih
###Converts the vcf file generated by GATK to VCF file 
"""

rule BCFConverter2:
    input:
        vcf=expand("{outputDIR}/{simulations}/{{simulation_index}}/VarCall/CombinedVCF",outputDIR=config["outputDIR"],simulations=config["simulations"]),
        ref= expand("{outputDIR}/{SequenceDIR}/{fasta_output}",outputDIR=config["outputDIR"],SequenceDIR=config["SequenceDIR"],fasta_output=str(config["fasta_file"]).split('/')[-1]),
        ChromMap= expand("{outputDIR}/{SequenceDIR}/ChromMap.tsv",outputDIR=config["outputDIR"],SequenceDIR=config["SequenceDIR"])
    output:
        expand("{outputDIR}/{simulations}/{{simulation_index}}/VarCall/BCFToolsRes",outputDIR=config["outputDIR"],simulations=config["simulations"]),
    params:
        bcftools=config['bcftools'],
        logNAME="BCFTools VCFToPlink Converter." + strftime("%Y-%m-%d.%H-%M-%S", localtime()),
    run:
        from subprocess import call
        callString="%s norm -Ou -m -any  %s | %s norm -Ou -f %s | %s annotate -x ID -I +%s -o %s --rename-chrs %s" %(params.bcftools,str(input.vcf),\
                                                                                   params.bcftools,str(input.ref),params.bcftools, "%CHROM:%POS:%REF:%ALT",str(output),str(input.ChromMap))
        call('echo "' + str(params.logNAME) + ':\n ' + callString + '\n" >> ' + config["ShellCallFile"], shell=True)
        call(callString, shell=True)                                                                         
                                         