# -*- coding: utf-8 -*-
"""
Created on Tue Sep 18 10:46:26 2018

@author: Masih

Construct LD plot for the result of each simulation
"""


configfile: "/home/masih/BacterialSimulator/Pipeline/ConfigFile.yaml"
import numpy as np

rule LDPlotter:
    input:
        ChromMap= expand("{outputDIR}/{SequenceDIR}/ChromMap.tsv",outputDIR=config["outputDIR"],SequenceDIR=config["SequenceDIR"]),
        Genotypegvcf=expand("{outputDIR}/{simulations}/{{simulation_index}}/VarCall/CombinedVCF",outputDIR=config["outputDIR"],simulations=config["simulations"]),
    output:
        VCFPed=temp(expand("{outputDIR}/{simulations}/{{simulation_index}}/VarCall/VCF.ped",outputDIR=config["outputDIR"],simulations=config["simulations"])),
        VCFMap=temp(expand("{outputDIR}/{simulations}/{{simulation_index}}/VarCall/VCF.map",outputDIR=config["outputDIR"],simulations=config["simulations"])),
        VCFSubset=expand("{outputDIR}/{simulations}/{{simulation_index}}/VarCall/VCFSubset",outputDIR=config["outputDIR"],simulations=config["simulations"]),
        VCFBedSubset=expand("{outputDIR}/{simulations}/{{simulation_index}}/VarCall/VCFBedSubset.bed",outputDIR=config["outputDIR"],simulations=config["simulations"]),
        VCFPedSubset=expand("{outputDIR}/{simulations}/{{simulation_index}}/VarCall/VCFPedSubset.ped",outputDIR=config["outputDIR"],simulations=config["simulations"]),
        VCFPedHaploview=expand("{outputDIR}/{simulations}/{{simulation_index}}/VarCall/Haploview.ped",outputDIR=config["outputDIR"],simulations=config["simulations"]),
        VCFMapHaploview=expand("{outputDIR}/{simulations}/{{simulation_index}}/VarCall/Haploview.map",outputDIR=config["outputDIR"],simulations=config["simulations"]),
        LDPlot=expand("{outputDIR}/{simulations}/{{simulation_index}}/VarCall/Haploview.LD.PNG",outputDIR=config["outputDIR"],simulations=config["simulations"]),
    params:
        vcftools=config['vcftools'],
        plink=config['plink'],
        java=config['java'],
        haploview=config['haploview'],
        ShellCallFile=config['ShellCallFile'],
        LDPlotterHelper1=config['ModuleDir']+'/LDPlotter/LDPlotterHelper1.py',
        LDPlotterHelper2=config['ModuleDir']+'/LDPlotter/LDPlotterHelper2.py',
        python=config['PythonDir']
    run:
        from subprocess import call
        CallString="%s --vcf %s --plink --chrom-map %s --maf 0.3 --remove-indels --out %s" %(params.vcftools,str(input.Genotypegvcf), str(input.ChromMap),str(output.VCFPed)[:-4])
        call('echo %s >> %s' %(CallString,params.ShellCallFile),shell=True)
        call(CallString,shell=True)
        #To input Bacterial data into haploview, we should subsample the variants,tag them as human male X chromosome which are haploid
        #subsampling the markers
        CallString='%s %s -M %s -S %s'%(params.python,params.LDPlotterHelper1,str(output.VCFMap),str(output.VCFSubset))
        call('echo %s >> %s' %(CallString,params.ShellCallFile),shell=True)
        call(CallString,shell=True)
        #extracting the subsampled markers from the original ped and map file
        CallString='%s --file %s --extract %s --make-bed --out %s'%(str(params.plink),str(output.VCFPed)[:-4],str(output.VCFSubset),str(output.VCFBedSubset)[:-4])
        call('echo %s >> %s' %(CallString,params.ShellCallFile),shell=True)
        call(CallString,shell=True)
        CallString='%s --bfile %s --recode tab --out %s'%(str(params.plink),str(output.VCFBedSubset)[:-4],str(output.VCFPedSubset)[:-4])
        call('echo %s >> %s' %(CallString,params.ShellCallFile),shell=True)
        call(CallString,shell=True)
        #1) convert gender to male in .ped file 
        #Changing the sex in .ped file to male
        CallString= '%s %s -P %s -M %s -Q %s -R %s' %(params.python,params.LDPlotterHelper2,str(output.VCFPedSubset)[:-4],
                                                  str(output.VCFPedSubset)[:-4],str(output.VCFPedHaploview),
                                                  str(output.VCFMapHaploview))
        call('echo %s >> %s' %(CallString,params.ShellCallFile),shell=True)
        call(CallString,shell=True)
        #generating LD plot using Haploview
        CallString="%s -jar %s -nogui -pedfile %s -info %s -dprime -compressedpng -chromosome X -maxDistance 1000 -memory 2000 -out %s" %(params.java,params.haploview,str(output.VCFPedHaploview),str(output.VCFMapHaploview),str(output.LDPlot)[:-7])
        call('echo %s >> %s' %(CallString,params.ShellCallFile),shell=True)
        call(CallString,shell=True)
            
