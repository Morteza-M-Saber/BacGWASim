configfile: "/home/masih/BacterialSimulator/Pipeline/ConfigFile.yaml"

rule BamMapQfilter:
    input:
        expand("{outputDIR}/{simulations}/{{simulation_index}}/Assembly/{{name}}.bamMarkDuplicate",outputDIR=config["outputDIR"],simulations=config["simulations"]),
    output:
        expand("{outputDIR}/{simulations}/{{simulation_index}}/Assembly/{{name}}.bam.mapq20",outputDIR=config["outputDIR"],simulations=config["simulations"]),
    params:
        samtools=config['samtools'],
        logNAME="MapQ Filtering." + strftime("%Y-%m-%d.%H-%M-%S", localtime()),
    run:
        from subprocess import call
        callString="%s view -bq 20  %s  >  %s" %(params.samtools,str(input),str(output))
        call('echo "' + str(params.logNAME) + ':\n ' + callString + '\n" >> ' + config["ShellCallFile"], shell=True)
        call(callString, shell=True)

#samtools view -bq 20 SE001.bam > SE001.bam.mapq20, #Filters mapped reads with MapQ <20
#MapQ is equal to phred score in mapping and is the -log(probability of the mapping is wrong)
#Samtools flagstag Se001.bam.mapq20 , shows the statistics of mapping 
#In general genomic assembly, a singlton is a read that did not assemble into a contig or map to a reference. It is a contig of only 1 read.
#In samtools, a singleton refers to a read that mapped but the mate didn't.

